<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
							
	<!-- bean의 class속성은 객체화가능한 클래스를 작성한다. interface는 BeanInstantiationException을 유발한다. -->		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<!-- value값은 일단 String이지만, setter의 파라미터 타입에 맞게 class객체등으로 형변환되어 처리된다. -->
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="toby" />
		<property name="password" value="toby" />
	</bean>

	<bean id="userService" class="springbook.user.service.UserService">
		<property name="userDao" ref="userDao"/>
		<property name="txManager" ref="txManager" />	
	</bean>
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- JDBC를 사용하는 경우 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />	
	</bean>
	<!-- JTA를 사용하는 경우 -->
	<!-- <bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="dataSource" ref="dataSource" />	
	</bean> -->
	
</beans>
